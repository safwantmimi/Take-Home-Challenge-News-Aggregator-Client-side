{"ast":null,"code":"(function () {\n  'use strict';\n\n  // Compile and cache the needed regular expressions.\n  var SPACE = /\\s/g;\n  var LESS_THAN = />/g;\n  var MORE_THAN = /</g;\n\n  // We need to swap out these characters with their character-entity\n  // equivalents because we're assigning the resulting string to\n  // `ghost.innerHTML`.\n  function escape(str) {\n    return str.replace(SPACE, '&nbsp;').replace(LESS_THAN, '&lt;').replace(MORE_THAN, '&gt;');\n  }\n\n  // Create the `ghost` element, with inline styles to hide it and ensure that\n  // the text is all on a single line.\n  var ghost = document.createElement('div');\n  ghost.style.cssText = 'box-sizing:content-box;display:inline-block;height:0;overflow:hidden;position:absolute;top:0;visibility:hidden;white-space:nowrap;';\n  document.body.appendChild(ghost);\n  function autosizeInput(elem, opts) {\n    // Force `content-box` on the `elem`.\n    elem.style.boxSizing = 'content-box';\n\n    // Apply the `font-size` and `font-family` styles of `elem` on the\n    // `ghost` element.\n    var elemStyle = window.getComputedStyle(elem);\n    var elemCssText = 'font-family:' + elemStyle.fontFamily + ';font-size:' + elemStyle.fontSize;\n\n    // Helper function that:\n    // 1. Copies the `font-family` and `font-size` of our `elem` onto `ghost`\n    // 2. Sets the contents of `ghost` to the specified `str`\n    // 3. Copies the width of `ghost` onto our `elem`\n    function set(str) {\n      str = str || elem.value || elem.getAttribute('placeholder') || '';\n      ghost.style.cssText += elemCssText;\n      ghost.innerHTML = escape(str);\n      var width = window.getComputedStyle(ghost).width;\n      elem.style.width = width;\n      return width;\n    }\n\n    // Call `set` on every `input` event (IE9+).\n    elem.addEventListener('input', function () {\n      set();\n    });\n\n    // Initialise the `elem` width.\n    var width = set();\n\n    // Set `min-width` if `opts.minWidth` was set, and only if the initial\n    // width is non-zero.\n    if (opts && opts.minWidth && width !== '0px') {\n      elem.style.minWidth = width;\n    }\n\n    // Return the `set` function.\n    return set;\n  }\n  if (typeof module == 'object') {\n    module.exports = autosizeInput;\n  } else {\n    window.autosizeInput = autosizeInput;\n  }\n})();","map":{"version":3,"names":["SPACE","LESS_THAN","MORE_THAN","escape","str","replace","ghost","document","createElement","style","cssText","body","appendChild","autosizeInput","elem","opts","boxSizing","elemStyle","window","getComputedStyle","elemCssText","fontFamily","fontSize","set","value","getAttribute","innerHTML","width","addEventListener","minWidth","module","exports"],"sources":["/home/sfn/react-news-feed/node_modules/autosize-input/autosize-input.js"],"sourcesContent":["(function() {\n\n  'use strict';\n\n  // Compile and cache the needed regular expressions.\n  var SPACE = /\\s/g;\n  var LESS_THAN = />/g;\n  var MORE_THAN = /</g;\n\n  // We need to swap out these characters with their character-entity\n  // equivalents because we're assigning the resulting string to\n  // `ghost.innerHTML`.\n  function escape(str) {\n    return str.replace(SPACE, '&nbsp;')\n              .replace(LESS_THAN, '&lt;')\n              .replace(MORE_THAN, '&gt;');\n  }\n\n  // Create the `ghost` element, with inline styles to hide it and ensure that\n  // the text is all on a single line.\n  var ghost = document.createElement('div');\n  ghost.style.cssText = 'box-sizing:content-box;display:inline-block;height:0;overflow:hidden;position:absolute;top:0;visibility:hidden;white-space:nowrap;';\n  document.body.appendChild(ghost);\n\n  function autosizeInput(elem, opts) {\n\n    // Force `content-box` on the `elem`.\n    elem.style.boxSizing = 'content-box';\n\n    // Apply the `font-size` and `font-family` styles of `elem` on the\n    // `ghost` element.\n    var elemStyle = window.getComputedStyle(elem);\n    var elemCssText = 'font-family:' + elemStyle.fontFamily +\n                     ';font-size:'   + elemStyle.fontSize;\n\n    // Helper function that:\n    // 1. Copies the `font-family` and `font-size` of our `elem` onto `ghost`\n    // 2. Sets the contents of `ghost` to the specified `str`\n    // 3. Copies the width of `ghost` onto our `elem`\n    function set(str) {\n      str = str || elem.value || elem.getAttribute('placeholder') || '';\n      ghost.style.cssText += elemCssText;\n      ghost.innerHTML = escape(str);\n      var width = window.getComputedStyle(ghost).width;\n      elem.style.width = width;\n      return width;\n    }\n\n    // Call `set` on every `input` event (IE9+).\n    elem.addEventListener('input', function() {\n      set();\n    });\n\n    // Initialise the `elem` width.\n    var width = set();\n\n    // Set `min-width` if `opts.minWidth` was set, and only if the initial\n    // width is non-zero.\n    if (opts && opts.minWidth && width !== '0px') {\n      elem.style.minWidth = width;\n    }\n\n    // Return the `set` function.\n    return set;\n  }\n\n  if (typeof module == 'object') {\n    module.exports = autosizeInput;\n  } else {\n    window.autosizeInput = autosizeInput;\n  }\n\n})();\n"],"mappings":"AAAA,CAAC,YAAW;EAEV,YAAY;;EAEZ;EACA,IAAIA,KAAK,GAAG,KAAK;EACjB,IAAIC,SAAS,GAAG,IAAI;EACpB,IAAIC,SAAS,GAAG,IAAI;;EAEpB;EACA;EACA;EACA,SAASC,MAAMA,CAACC,GAAG,EAAE;IACnB,OAAOA,GAAG,CAACC,OAAO,CAACL,KAAK,EAAE,QAAQ,CAAC,CACxBK,OAAO,CAACJ,SAAS,EAAE,MAAM,CAAC,CAC1BI,OAAO,CAACH,SAAS,EAAE,MAAM,CAAC;EACvC;;EAEA;EACA;EACA,IAAII,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACzCF,KAAK,CAACG,KAAK,CAACC,OAAO,GAAG,oIAAoI;EAC1JH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,KAAK,CAAC;EAEhC,SAASO,aAAaA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAEjC;IACAD,IAAI,CAACL,KAAK,CAACO,SAAS,GAAG,aAAa;;IAEpC;IACA;IACA,IAAIC,SAAS,GAAGC,MAAM,CAACC,gBAAgB,CAACL,IAAI,CAAC;IAC7C,IAAIM,WAAW,GAAG,cAAc,GAAGH,SAAS,CAACI,UAAU,GACtC,aAAa,GAAKJ,SAAS,CAACK,QAAQ;;IAErD;IACA;IACA;IACA;IACA,SAASC,GAAGA,CAACnB,GAAG,EAAE;MAChBA,GAAG,GAAGA,GAAG,IAAIU,IAAI,CAACU,KAAK,IAAIV,IAAI,CAACW,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE;MACjEnB,KAAK,CAACG,KAAK,CAACC,OAAO,IAAIU,WAAW;MAClCd,KAAK,CAACoB,SAAS,GAAGvB,MAAM,CAACC,GAAG,CAAC;MAC7B,IAAIuB,KAAK,GAAGT,MAAM,CAACC,gBAAgB,CAACb,KAAK,CAAC,CAACqB,KAAK;MAChDb,IAAI,CAACL,KAAK,CAACkB,KAAK,GAAGA,KAAK;MACxB,OAAOA,KAAK;IACd;;IAEA;IACAb,IAAI,CAACc,gBAAgB,CAAC,OAAO,EAAE,YAAW;MACxCL,GAAG,CAAC,CAAC;IACP,CAAC,CAAC;;IAEF;IACA,IAAII,KAAK,GAAGJ,GAAG,CAAC,CAAC;;IAEjB;IACA;IACA,IAAIR,IAAI,IAAIA,IAAI,CAACc,QAAQ,IAAIF,KAAK,KAAK,KAAK,EAAE;MAC5Cb,IAAI,CAACL,KAAK,CAACoB,QAAQ,GAAGF,KAAK;IAC7B;;IAEA;IACA,OAAOJ,GAAG;EACZ;EAEA,IAAI,OAAOO,MAAM,IAAI,QAAQ,EAAE;IAC7BA,MAAM,CAACC,OAAO,GAAGlB,aAAa;EAChC,CAAC,MAAM;IACLK,MAAM,CAACL,aAAa,GAAGA,aAAa;EACtC;AAEF,CAAC,EAAE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}