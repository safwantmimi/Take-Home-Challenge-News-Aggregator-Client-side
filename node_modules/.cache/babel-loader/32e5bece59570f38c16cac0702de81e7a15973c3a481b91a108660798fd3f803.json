{"ast":null,"code":"var _jsxFileName = \"/home/sfn/react-news-feed/src/Components/UI/InlineEditText.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InlineEdit = _ref => {\n  _s();\n  let {\n    value,\n    setValue\n  } = _ref;\n  const [editingValue, setEditingValue] = React.useState(value);\n  const onChange = event => setEditingValue(event.target.value);\n  const onKeyDown = event => {\n    if (event.key === \"Enter\" || event.key === \"Escape\") {\n      event.target.blur();\n    }\n  };\n  const onBlur = event => {\n    if (event.target.value.trim() === \"\") {\n      setEditingValue(value);\n    } else {\n      setValue(event.target.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    \"aria-label\": \"Field name\",\n    className: \"inline-edit-field\",\n    value: editingValue,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(InlineEdit, \"r773lDCaWGjcSqtE9VpEFxweEyQ=\");\n_c = InlineEdit;\nexport default InlineEdit;\nvar _c;\n$RefreshReg$(_c, \"InlineEdit\");","map":{"version":3,"names":["InlineEdit","_ref","_s","value","setValue","editingValue","setEditingValue","React","useState","onChange","event","target","onKeyDown","key","blur","onBlur","trim","_jsxDEV","type","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sfn/react-news-feed/src/Components/UI/InlineEditText.js"],"sourcesContent":["const InlineEdit = ({ value, setValue }) => {\n    const [editingValue, setEditingValue] = React.useState(value);\n  \n    const onChange = (event) => setEditingValue(event.target.value);\n  \n    const onKeyDown = (event) => {\n      if (event.key === \"Enter\" || event.key === \"Escape\") {\n        event.target.blur();\n      }\n    };\n  \n    const onBlur = (event) => {\n      if (event.target.value.trim() === \"\") {\n        setEditingValue(value);\n      } else {\n        setValue(event.target.value);\n      }\n    };\n  \n    return (\n      <input\n        type=\"text\"\n        aria-label=\"Field name\"\n        className=\"inline-edit-field\"\n        value={editingValue}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n      />\n    );\n  };\n  \nexport default InlineEdit;\n  "],"mappings":";;;AAAA,MAAMA,UAAU,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EACnC,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAACL,KAAK,CAAC;EAE7D,MAAMM,QAAQ,GAAIC,KAAK,IAAKJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACR,KAAK,CAAC;EAE/D,MAAMS,SAAS,GAAIF,KAAK,IAAK;IAC3B,IAAIA,KAAK,CAACG,GAAG,KAAK,OAAO,IAAIH,KAAK,CAACG,GAAG,KAAK,QAAQ,EAAE;MACnDH,KAAK,CAACC,MAAM,CAACG,IAAI,CAAC,CAAC;IACrB;EACF,CAAC;EAED,MAAMC,MAAM,GAAIL,KAAK,IAAK;IACxB,IAAIA,KAAK,CAACC,MAAM,CAACR,KAAK,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACpCV,eAAe,CAACH,KAAK,CAAC;IACxB,CAAC,MAAM;MACLC,QAAQ,CAACM,KAAK,CAACC,MAAM,CAACR,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,oBACEc,OAAA;IACEC,IAAI,EAAC,MAAM;IACX,cAAW,YAAY;IACvBC,SAAS,EAAC,mBAAmB;IAC7BhB,KAAK,EAAEE,YAAa;IACpBI,QAAQ,EAAEA,QAAS;IACnBG,SAAS,EAAEA,SAAU;IACrBG,MAAM,EAAEA;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEN,CAAC;AAACrB,EAAA,CA9BEF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAgChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}