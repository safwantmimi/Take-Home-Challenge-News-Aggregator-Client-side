{"ast":null,"code":"var _jsxFileName = \"/home/sfn/Take Home Project/react-news-feed/src/Components/UI/InfiniteScroll.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteScroll = _ref => {\n  _s();\n  let {\n    data,\n    setData,\n    onSelectItem,\n    selectedItems\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      setPage(prevPage => prevPage + 1);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  const handleItemCheck = item => {\n    console.log(item);\n    onSelectItem(item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"infinite-scroll\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check checkbox-teal mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          checked: selectedItems.includes(item.id) // Set the checked status based on item selection logic\n          ,\n          onChange: () => handleItemCheck(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-check-label\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(InfiniteScroll, \"LMxNfAY58b6loOOsHmH6zd80VGE=\");\n_c = InfiniteScroll;\nexport default InfiniteScroll;\nvar _c;\n$RefreshReg$(_c, \"InfiniteScroll\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","InfiniteScroll","_ref","_s","data","setData","onSelectItem","selectedItems","page","setPage","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","prevPage","addEventListener","removeEventListener","handleItemCheck","item","console","log","className","children","map","type","checked","includes","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/home/sfn/Take Home Project/react-news-feed/src/Components/UI/InfiniteScroll.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst InfiniteScroll = ({ data, setData, onSelectItem, selectedItems }) => {\n  const [page, setPage] = useState(1);\n\n  const handleScroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n      document.documentElement.offsetHeight\n    ) {\n      setPage((prevPage) => prevPage + 1);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleItemCheck = (item) => {\n    console.log(item)\n    onSelectItem(item);\n  };\n\n  return (\n    <div className=\"infinite-scroll\" >\n      {data.map((item) => (\n        <div key={item.id} className='form-check checkbox-teal mb-2'>\n          <label>\n            <input\n              type=\"checkbox\"\n              className='form-check-input'\n              checked={selectedItems.includes(item.id)} // Set the checked status based on item selection logic\n              onChange={() => handleItemCheck(item)}\n            />\n            <span className='form-check-label'>\n                {item.name}\n            </span>\n          </label>\n        </div>\n        \n      ))}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGC,IAAA,IAAoD;EAAAC,EAAA;EAAA,IAAnD;IAAEC,IAAI;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAAL,IAAA;EACpE,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB,IACEC,MAAM,CAACC,WAAW,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,KACvDF,QAAQ,CAACC,eAAe,CAACE,YAAY,EACrC;MACAP,OAAO,CAAEQ,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACrC;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdc,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAER,YAAY,CAAC;IAC/C,OAAO,MAAMC,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAET,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,eAAe,GAAIC,IAAI,IAAK;IAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBf,YAAY,CAACe,IAAI,CAAC;EACpB,CAAC;EAED,oBACErB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC7BrB,IAAI,CAACsB,GAAG,CAAEL,IAAI,iBACbrB,OAAA;MAAmBwB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC1DzB,OAAA;QAAAyB,QAAA,gBACEzB,OAAA;UACE2B,IAAI,EAAC,UAAU;UACfH,SAAS,EAAC,kBAAkB;UAC5BI,OAAO,EAAErB,aAAa,CAACsB,QAAQ,CAACR,IAAI,CAACS,EAAE,CAAE,CAAC;UAAA;UAC1CC,QAAQ,EAAEA,CAAA,KAAMX,eAAe,CAACC,IAAI;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACFnC,OAAA;UAAMwB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAC7BJ,IAAI,CAACe;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC,GAXAd,IAAI,CAACS,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYZ,CAEN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CA1CIF,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}